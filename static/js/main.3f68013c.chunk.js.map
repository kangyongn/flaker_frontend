{"version":3,"sources":["action/UserAction.js","adapter/UserAdapter.js","adapter/PlanAdapter.js","action/PlanAction.js","component/LogIn.js","component/SignUp.js","adapter/EntryAdapter.js","component/NewPlan.js","component/dashboard/DashboardMenu.js","component/dashboard/DashboardSegment.js","container/Dashboard.js","component/creator/CreatorMenu.js","component/creator/CreatorSelect.js","adapter/StripeAdapter.js","component/creator/CreatorFinish.js","component/creator/CreatorSegment.js","container/CreatorDashboard.js","component/end/EndMenu.js","component/end/EndSegment.js","container/EndDashboard.js","component/Router.js","component/NavBar.js","App.js","serviceWorker.js","reducer/UserReducer.js","reducer/PlanReducer.js","index.js"],"names":["saveUserToState","user","type","payload","saveTokenToState","token","editEntryInState","entry","saveStripeBalanceToState","balance","getUsers","dispatch","fetch","then","res","json","users","saveUsersToState","getPlans","plans","savePlansToState","LogIn","state","email","password","handleChange","e","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","props","postLogIn","history","push","react_default","a","createElement","className","onSubmit","this","Input","placeholder","onChange","Button","Component","withRouter","connect","method","headers","Content-Type","Accept","body","JSON","stringify","info","jwt","localStorage","setItem","SignUp","password_confirmation","first_name","last_name","postSignUp","postInvite","plan","wager","cost","user_id","id","plan_id","saveEntryToPlanState","NewPlan","attending","postCharge","_callee","_ref2","regenerator_default","wrap","_context","prev","next","stripe","createToken","currentUserId","sent","amount","stripeToken","stop","objectSpread","creator_id","invites","all","filter","includes","postPlan","postEntry","map","mapInvites","handleSelect","data","userOptions","text","stripeUrl","concat","current","stripeId","labelPosition","Label","basic","Dropdown","fluid","multiple","search","selection","options","react_stripe_elements_es","style","textAlign","href","injectStripe","savePlanToState","savePlanToUserState","saveEntryToState","ids","entries","menuItem","end","find","Menu","Item","key","active","onClick","handleClick","Icon","color","attached","tabular","postion","as","NavLink","to","patchEntry","deleteEntry","removeEntryFromState","handleAccept","_ref","asyncToGenerator","mark","_x","_x2","apply","arguments","Fragment","Segment","content","icon","label","pointing","render","Dashboard","_this2","apiKey","dashboard_DashboardSegment","dashboard_DashboardMenu","handleAddClick","handleFinishClick","CreatorSelect","userIds","availableUsersId","entriesUserId","nonInvitedUsersId","userId","getStripe","Stripe-Account","Authorization","available","CreatorFinish","postTransfers","Math","round","share","pool","length","patchPayout","patchPlan","handleFinishSubmit","attendingIds","payout","editPlanInState","attendingUsers","pendingIds","pendingUsers","renderUsers","renderPending","add","creator_CreatorSelect","finish","creator_CreatorFinish","CreatorDashboard","Grid","Column","width","vertical","creator_CreatorMenu","stretched","creator_CreatorSegment","attendingEntries","successfulEntries","EndDashboard","end_EndMenu","end_EndSegment","Router","react_router","path","component","currentUser","removeUserFromState","secondary","header","children","position","App","component_NavBar","component_Router","getItem","getCurrentUser","setUserToState","Boolean","window","location","hostname","match","initialState","userReducer","undefined","action","stripe_id","clear","toConsumableArray","editedEntries","removedEntries","planReducer","currentPlan","newEntries","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","react_router_dom","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f68013c.chunk.js","sourcesContent":["export const saveUserToState = user => {\n  return {type: \"SAVE_USER_TO_STATE\", payload: user}\n}\n\nexport const saveTokenToState = token => {\n  return {type: \"SAVE_TOKEN_TO_STATE\", payload: token}\n}\n\nexport const setUserToState = user => {\n  return {type:'SET_USER_TO_STATE', payload: user}\n}\n\nexport const removeUserFromState = () => {\n  return {type: 'REMOVE_USER_FROM_STATE'}\n}\n\nexport const saveUsersToState = users => {\n  return {type: 'SAVE_USERS_TO_STATE', payload: users}\n}\n\nexport const saveEntryToState = entry => {\n  return {type: 'SAVE_ENTRY_TO_STATE', payload: entry}\n}\n\nexport const editEntryInState = entry => {\n  return {type: 'EDIT_ENTRY_IN_STATE', payload: entry}\n}\n\nexport const removeEntryFromState = entry => {\n  return {type: 'REMOVE_ENTRY_FROM_STATE', payload: entry}\n}\n\nexport const savePlanToUserState = plan => {\n  return {type: 'SAVE_PLAN_TO_USER_STATE', payload: plan}\n}\n\nexport const saveStripeBalanceToState = balance => {\n  return {type: 'SAVE_STRIPE_BALANCE_TO_STATE', payload: balance}\n}\n","import { saveUsersToState } from '../action/UserAction';\nimport { saveUserToState } from '../action/UserAction';\nimport { saveTokenToState } from '../action/UserAction';\nimport { setUserToState } from '../action/UserAction';\n\nexport const getCurrentUser = () => {\n  return (dispatch) => {\n    return fetch('http://localhost:3000/api/v1/current_user', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': localStorage.getItem('jwt')\n      }\n    })\n    .then(res => res.json())\n    .then(user => {\n      dispatch(setUserToState(user))\n    })\n  }\n}\n\nexport const postLogIn = (user) => {\n  return (dispatch) => {\n    return fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    })\n    .then(res => res.json())\n    .then(info => {\n      if (info.jwt) {\n        dispatch(saveUserToState(info))\n        dispatch(saveTokenToState(info.jwt))\n        localStorage.setItem(\"jwt\", info.jwt)\n      }\n    })\n  }\n}\n\nexport const postSignUp = (user) => {\n  return (dispatch) => {\n    return fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(user)\n    })\n    .then(res => res.json())\n    .then(info => {\n      if (info.jwt) {\n        dispatch(saveUserToState(info))\n        dispatch(saveTokenToState(info.jwt))\n        localStorage.setItem('jwt', info.jwt)\n      }\n    })\n  }\n}\n\nexport const getUsers = () => {\n  return (dispatch) => {\n    return fetch('http://localhost:3000/api/v1/users')\n      .then(res => res.json())\n      .then(users => {\n        dispatch(saveUsersToState(users))\n      })\n  }\n}\n","import { savePlanToState, savePlansToState, editPlanInState} from '../action/PlanAction';\nimport { savePlanToUserState } from '../action/UserAction';\n\nexport const postPlan = info => {\n  return (dispatch) => {\n    return fetch(\"http://localhost:3000/api/v1/plans\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(info)\n    })\n    .then(res => res.json())\n    .then(plan => {\n      dispatch(savePlanToState(plan))\n      dispatch(savePlanToUserState(plan))\n      return plan\n    })\n  }\n}\n\nexport const patchPlan = id => {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/api/v1/plans/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({end: true})\n    })\n    .then(res => res.json())\n    .then(plan => {\n      dispatch(editPlanInState(plan))\n    })\n  }\n}\n\nexport const getPlans = () => {\n  return (dispatch) => {\n    return fetch(\"http://localhost:3000/api/v1/plans\")\n      .then(res => res.json())\n      .then(plans => {\n        dispatch(savePlansToState(plans))\n      })\n  }\n}\n","export const savePlanToState = plan => {\n  return {type: 'SAVE_PLAN_TO_STATE', payload: plan}\n}\n\nexport const savePlansToState = plans => {\n  return {type: 'SAVE_PLANS_TO_STATE', payload: plans}\n}\n\nexport const saveEntryToPlanState = entry => {\n  return {type: 'SAVE_ENTRY_TO_PLAN_STATE', payload: entry}\n}\n\nexport const editPlanInState = plan => {\n  return {type: 'EDIT_PLAN_IN_STATE', payload: plan}\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {postLogIn, getUsers} from '../adapter/UserAdapter';\nimport {getPlans} from '../adapter/PlanAdapter';\n\nimport {Input, Button} from 'semantic-ui-react';\n\nclass LogIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.postLogIn(this.state)\n    this.props.getUsers()\n    this.props.getPlans()\n    this.props.history.push('/dashboard')\n  }\n\n  render() {\n    return (\n      <form className='flaker-form' onSubmit={this.handleSubmit}>\n        <h1>LogIn</h1>\n        <Input type='text' name='email' placeholder='E-Mail' value={this.state.email} onChange={this.handleChange}/>\n        <Input type='password' name='password' placeholder='Password' value={this.state.password} onChange={this.handleChange}/>\n        <Button>LogIn</Button>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(connect(null, {postLogIn, getUsers, getPlans})(LogIn))\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {postSignUp, getUsers} from '../adapter/UserAdapter';\n\nimport {Input, Button} from 'semantic-ui-react';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: ''\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.getUsers()\n    this.props.postSignUp(this.state)\n    this.props.history.push('/creator-dashboard')\n  }\n\n  render() {\n    return (\n      <form className='flaker-form'onSubmit={this.handleSubmit}>\n        <h1>SignUp</h1>\n        <Input type='text' name='email' placeholder='E-Mail' value={this.state.email} onChange={this.handleChange}/>\n        <Input type='password' name='password' placeholder='Password' value={this.state.password} onChange={this.handleChange}/>\n        <Input type='password' name='password_confirmation' placeholder='Confirm Password' value={this.state.password_confirmation} onChange={this.handleChange}/>\n        <Input type='text' name='first_name' placeholder='First Name' value={this.state.first_name} onChange={this.handleChange}/>\n        <Input type='text' name='last_name' placeholder='Last Name' value={this.state.last_name} onChange={this.handleChange}/>\n        <Button>SignUp</Button>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(connect(null, {postSignUp, getUsers})(SignUp))\n","import {saveEntryToState, editEntryInState, removeEntryFromState} from '../action/UserAction';\nimport {saveEntryToPlanState} from '../action/PlanAction';\n\nexport const postEntry = (info, plan) => {\n  return (dispatch) => {\n    return fetch(\"http://localhost:3000/api/v1/entries\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({wager: info.cost, attending: info.attending, user_id: info.creator_id, plan_id: plan.id})\n    })\n    .then(res => res.json())\n    .then(entry => {\n      dispatch(saveEntryToState(entry))\n    })\n  }\n}\n\nexport const postInvite = (user, plan) => {\n  return (dispatch) => {\n    return fetch(\"http://localhost:3000/api/v1/entries\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({wager: plan.cost, user_id: user.id, plan_id: plan.id})\n    })\n    .then(res => res.json())\n    .then(entry => {\n      dispatch(saveEntryToPlanState(entry))\n    })\n  }\n}\n\nexport const patchEntry = id => {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/api/v1/entries/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({attending: true})\n    })\n    .then(res => res.json())\n    .then(entry => {\n      dispatch(editEntryInState(entry))\n    })\n  }\n}\n\nexport const patchPayout = (id, amount) => {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/api/v1/entries/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({payout: amount})\n    })\n    .then(res => res.json())\n    .then(entry => {\n      dispatch(editEntryInState(entry))\n    })\n  }\n}\n\nexport const deleteEntry = id => {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/api/v1/entries/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n    .then(res => res.json())\n    .then(entry => {\n      dispatch(removeEntryFromState(entry))\n    })\n  }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Dropdown, Input, Label, Button} from 'semantic-ui-react';\n\nimport {postPlan} from '../adapter/PlanAdapter';\nimport {postEntry, postInvite} from '../adapter/EntryAdapter';\n\nimport {CardElement, injectStripe} from 'react-stripe-elements';\n\nclass NewPlan extends Component {\n  state = {\n    name: '',\n    cost: null,\n    attending: true,\n    users: []\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  postCharge = async () => {\n    const{token} = await this.props.stripe.createToken({id: this.props.currentUserId})\n    await fetch('http://localhost:3000/api/v1/charges', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({amount: (this.state.cost * 100), id: this.props.currentUserId, stripeToken: token.id})\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const info = {creator_id: this.props.currentUserId, ...this.state}\n    const invites = this.props.user.all.filter(user => this.state.users.includes(user.id))\n    const mapInvites = plan => {\n      invites.map(user => this.props.postInvite(user, plan))\n    }\n    this.props.postPlan(info)\n    .then(plan => {\n      this.props.postEntry(info, plan)\n      mapInvites(plan)\n      this.postCharge()\n    })\n    .then(() => this.props.history.push('/creator-dashboard'))\n  }\n\n  handleSelect = (e, data) => {\n    this.setState({\n      users: data.value\n    })\n  }\n\n  userOptions = () => {\n    const otherUsers = this.props.user.all.filter(user => user.id !== this.props.currentUserId)\n    return otherUsers.map(user => {\n      return {\n        text: user.name,\n        value: user.id\n      }\n    })\n  }\n\n  render() {\n    const stripeUrl = `https://connect.stripe.com/express/oauth/authorize?response_type=code&client_id=ca_EwmL3WIkrp6NYggrQouufNg2VodKcbhW&scope=read_write&redirect_uri=http://localhost:3000/api/v1/oauth/callback&state=${this.props.currentUserId}`\n\n    return (\n      this.props.user.current.stripeId ?\n        <form className='flaker-form' onSubmit={this.handleSubmit}>\n          <h1>Create Plan</h1>\n          <Input type='text' name='name' value={this.state.name} onChange={this.handleChange}/>\n          <Input labelPosition='right' type='number' name='cost' placeholder='Amount' value={this.state.cost} onChange={this.handleChange}>\n            <Label basic>$</Label>\n            <input/>\n            <Label>.00</Label>\n          </Input>\n          <Dropdown\n            placeholder='Users'\n            fluid\n            multiple\n            search\n            selection\n            options={this.userOptions()}\n            onChange={this.handleSelect}\n          />\n          <CardElement/>\n          <Button>Create Plan</Button>\n        </form>\n        :\n        <div style={{'textAlign': 'center'}}>\n          <h1>Create Plan</h1>\n          <a href={stripeUrl}>\n            <Button>Stripe</Button>\n          </a>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    currentUserId: state.user.current.id\n  }\n}\n\nexport default injectStripe(connect(mapStateToProps, {postPlan, postEntry, postInvite})(NewPlan))\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {NavLink} from 'react-router-dom';\n\nimport {Icon, Menu} from 'semantic-ui-react';\n\nconst DashboardMenu = props => {\n  const ids = props.user.entries.map(entry => entry.plan_id)\n  const plans = props.plan.filter(plan => ids.includes(plan.id) && !plan.end)\n\n  const menuItem = plans.map(plan => {\n    const current = props.user.entries.find(entry => entry.plan_id === plan.id)\n    return (\n      <Menu.Item\n        key={plan.id}\n        value={plan.id}\n        active={props.active === plan.id}\n        onClick={props.handleClick}\n      >\n        {current ? current.attending ? null : <Icon name='exclamation' color='red'/> : null}\n        {plan.name}\n      </Menu.Item>\n    )\n  })\n\n  return (\n    <Menu attached='bottom' tabular>\n      {menuItem}\n      <Menu.Menu postion='right'>\n        <Menu.Item as={NavLink} to='create-plan'><Icon name='add'/>Create Plan</Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.current,\n    plan: state.plan.all\n  }\n}\n\nexport default connect(mapStateToProps)(DashboardMenu)\n","import React from 'react';\n\nimport {connect} from 'react-redux';\n\nimport {patchEntry, deleteEntry} from '../../adapter/EntryAdapter';\n\nimport {Segment, Icon, Button} from 'semantic-ui-react';\n\nimport {CardElement, injectStripe} from 'react-stripe-elements';\n\nconst DashboardSegment = props => {\n  const handleAccept = async (entry, plan) => {\n    const {token} = await props.stripe.createToken({id: props.user.current.id})\n    await fetch('http://localhost:3000/api/v1/charges', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({amount: (plan.cost * 100), id: plan.creator_id, stripeToken: token.id})\n    })\n    await props.patchEntry(entry.id)\n  }\n\n  const attending = plan => {\n    const entries = plan.entries.filter(entry => entry.attending === true && entry.user_id !== props.user.current.id && plan.creator_id !== entry.user_id)\n    const ids = entries.map(entry => entry.user_id)\n    const users = props.user.all.filter(user => ids.includes(user.id))\n\n    const render = users.map(user => <li key={user.id}>{user.name}</li>)\n\n    return (\n      <ul>\n        {render}\n      </ul>\n    )\n  }\n\n  const stripeUrl = `https://connect.stripe.com/express/oauth/authorize?response_type=code&client_id=ca_EwmL3WIkrp6NYggrQouufNg2VodKcbhW&scope=read_write&redirect_uri=http://localhost:3000/api/v1/oauth/callback&state=${props.user.current.id}`\n\n  return (\n    <React.Fragment>\n      <Segment attached='top'>\n        <h1>\n          {props.plan ? props.plan.name : null}\n          {props.entry ?\n            props.entry.attending ? <Icon name='calendar check' color='green'/> : null\n            :\n            null\n          }\n        </h1>\n\n        <h3>{props.plan ? <i>Creator: {props.user.all.find(user => user.id === props.plan.creator_id).name}</i> : null}</h3>\n        {props.entry ?\n          props.entry.attending ?\n            null\n            :\n            props.user.current.stripeId ?\n              <div>\n                <CardElement />\n                <Button\n                  basic\n                  color='green'\n                  content='Accept'\n                  icon='check'\n                  label={{basic: true, color: 'green', pointing: 'left', content: `$ ${props.plan.cost}`}}\n                  onClick={() => handleAccept(props.entry, props.plan)}\n                />\n                <Button\n                  basic\n                  color='red'\n                  content='Decline'\n                  onClick={() => props.deleteEntry(props.entry.id)}\n                />\n              </div>\n              :\n              <a href={stripeUrl}>\n                <Button>Stripe</Button>\n              </a>\n          :\n          null\n        }\n        <h3>{props.plan ? 'Attending' : null}</h3>\n        {props.plan ?\n          attending(props.plan)\n          :\n          null\n        }\n      </Segment>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nexport default injectStripe(connect(mapStateToProps, {patchEntry, deleteEntry})(DashboardSegment))\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport DashboardMenu from '../component/dashboard/DashboardMenu';\nimport DashboardSegment from '../component/dashboard/DashboardSegment';\n\nimport {StripeProvider, Elements} from 'react-stripe-elements';\n\nclass Dashboard extends Component {\n  state = {\n    active: ''\n  }\n\n  handleClick = (e, {value}) => {\n    this.setState({\n      active: value\n    })\n  }\n\n  render() {\n    const entry = this.props.user.entries.find(entry => entry.plan_id === this.state.active)\n    const plan = this.props.plan.find(plan => plan.id === this.state.active)\n\n    return (\n      <div className='flaker-dashboard'>\n        <h1 style={{'textAlign': 'center'}}>Dashboard</h1>\n        <StripeProvider apiKey='pk_test_FSRfhLIrttg50RdN9s1xt4Xr00mUF63Xd8'>\n          <Elements>\n            <DashboardSegment entry={entry} plan={plan}/>\n          </Elements>\n        </StripeProvider>\n        <DashboardMenu active={this.state.active} handleClick={this.handleClick}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.current,\n    plan: state.plan.all\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Menu, Icon} from 'semantic-ui-react';\n\nconst CreatorMenu = props => {\n  const plans = props.plan.filter(plan => plan.creator_id === props.user.id && plan.end === false)\n\n  const menuItem = plans.map(plan => {\n    return (\n      <Menu.Item\n        key={plan.id}\n        value={plan.id}\n        active={props.active === plan.id}\n        onClick={props.handleClick}\n      >\n        {plan.name}\n      </Menu.Item>\n    )\n  })\n\n  return (\n    <React.Fragment>\n      {props.active ?\n        <React.Fragment>\n          <Menu.Item onClick={props.handleAddClick}><Icon name='add'/>Add User {props.active ? `To ${props.active.name}` : null}</Menu.Item>\n          <Menu.Item onClick={props.handleFinishClick}><Icon name='close'/>Finished {props.active ? props.active.name : null}</Menu.Item>\n        </React.Fragment>\n        :\n        null\n      }\n      {menuItem}\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.current,\n    plan: state.plan.all\n  }\n}\n\nexport default connect(mapStateToProps)(CreatorMenu)\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {Dropdown, Button} from 'semantic-ui-react';\n\nimport {postInvite} from '../../adapter/EntryAdapter';\n\nclass CreatorSelect extends Component {\n  state = {\n    users: []\n  }\n\n  handleChange = (e, data) => {\n    this.setState({\n      users: data.value\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const plan = this.props.plan.find(plan => plan.id === this.props.active.id)\n    const invites = this.props.user.all.filter(user => this.state.users.includes(user.id))\n    const mapInvites = plan => {\n      invites.map(user => this.props.postInvite(user, plan))\n    }\n    mapInvites(plan)\n  }\n\n  render() {\n    const attendingEntries = this.props.active.entries.filter(entry => entry.attending === true && entry.user_id !== this.props.user.current.id)\n    const userIds = attendingEntries.map(entry => entry.user_id)\n\n    const nonAttendingUsersId = this.props.user.all.filter(user => !userIds.includes(user.id))\n    const availableUsers = nonAttendingUsersId.filter(user => user.id !== this.props.active.creator_id)\n    const availableUsersId = availableUsers.map(user => user.id)\n    const entriesUserId = this.props.active.entries.map(entry => entry.user_id)\n    const nonInvitedUsersId = availableUsersId.filter((userId) => !entriesUserId.includes(userId))\n    const nonInvitedUsers = this.props.user.all.filter(user => nonInvitedUsersId.includes(user.id))\n\n    const userOptions = nonInvitedUsers.map(user => {\n      return {\n        text: user.name,\n        value: user.id\n      }\n    })\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className='flaker-select'>\n          <Dropdown\n            placeholder='Users'\n            fluid\n            multiple\n            search\n            selection\n            options={userOptions}\n            onChange={this.handleChange}\n          />\n          <Button>Add User</Button>\n        </div>\n      </form>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    plan: state.plan.all\n  }\n}\n\nexport default connect(mapStateToProps, {postInvite})(CreatorSelect)\n","import {saveStripeBalanceToState} from '../action/UserAction';\n\nexport const getStripe = stripeId => {\n  return (dispatch) => {\n    return fetch('https://api.stripe.com/v1/balance', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Stripe-Account': stripeId,\n        'Authorization': `Bearer (secret key)` \n      }\n    })\n      .then(res => res.json())\n      .then(balance => {\n        if(balance.available) {\n          dispatch(saveStripeBalanceToState(balance.available[0].amount))\n        } else {\n          dispatch(saveStripeBalanceToState(0))\n        }\n      })\n  }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {Dropdown, Button} from 'semantic-ui-react';\n\nimport {injectStripe} from 'react-stripe-elements';\n\nimport {patchPayout} from '../../adapter/EntryAdapter';\nimport {patchPlan} from '../../adapter/PlanAdapter';\nimport {getStripe} from '../../adapter/StripeAdapter';\n\nclass CreatorFinish extends Component {\n  state = {\n    users: [],\n  }\n\n  handleChange = (e, data) => {\n    this.setState({\n      users: data.value\n    })\n  }\n\n  postTransfers = async (amount, id) => {\n    await fetch('http://localhost:3000/api/v1/transfers', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({amount: Math.round(amount * 100), id: id})\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const share = (this.props.active.pool - (this.props.active.pool * 0.054) - (this.state.users.length * 0.30))/this.state.users.length\n    const amount = Math.round(share * 100) / 100\n\n    const attended = this.props.active.entries.filter(entry => this.state.users.includes(entry.user_id))\n    attended.map(entry => this.props.patchPayout(entry.id, amount))\n    this.props.patchPlan(this.props.active.id)\n\n    this.state.users.map(id => this.postTransfers(amount, id))\n\n    this.props.getStripe(this.props.user.current.stripeId)\n\n    this.props.handleFinishSubmit()\n  }\n\n  render() {\n    const attendingEntries = this.props.active.entries.filter(entry => entry.attending === true)\n    const attendingIds = attendingEntries.map(entry => entry.user_id)\n    const attendingUsers = this.props.user.all.filter(user => attendingIds.includes(user.id))\n\n    const userOptions = attendingUsers.map(user => {\n      return {\n        text: user.id === this.props.user.current.id ? `${user.name} (Me)` : user.name,\n        value: user.id\n      }\n    })\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className='flaker-select'>\n          <Dropdown\n            placeholder='Attended'\n            fluid\n            multiple\n            search\n            selection\n            options={userOptions}\n            onChange={this.handleChange}\n          />\n          <Button>Finish</Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nexport default injectStripe(connect(mapStateToProps, {patchPayout, patchPlan, getStripe})(CreatorFinish))\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Segment} from 'semantic-ui-react';\n\nimport CreatorSelect from './CreatorSelect';\nimport CreatorFinish from './CreatorFinish';\n\nimport {StripeProvider, Elements} from 'react-stripe-elements';\n\nconst CreatorSegment = props => {\n  const attendingEntries = props.active.entries.filter(entry => entry.attending === true && entry.user_id !== props.user.current.id)\n  const attendingIds = attendingEntries.map(entry => entry.user_id)\n  const attendingUsers = props.user.all.filter(user => attendingIds.includes(user.id))\n\n  const pendingEntries = props.active.entries.filter(entry => entry.attending === false && entry.user_id !== props.user.current.id)\n  const pendingIds = pendingEntries.map(entry => entry.user_id)\n  const pendingUsers = props.user.all.filter(user => pendingIds.includes(user.id))\n\n  const renderUsers = attendingUsers.map(user => <li key={user.id}>{user.name}</li>)\n  const renderPending = pendingUsers.map(user => <li key={user.id}>{user.name}</li>)\n\n  return (\n    <Segment>\n      <h1>{props.active.name}</h1>\n      <h3>Attending</h3>\n      <ul>{renderUsers}</ul>\n      <h3>Pending</h3>\n      <ul>{renderPending}</ul>\n      {props.add ? <CreatorSelect active={props.active}/> : null}\n      {props.finish ?\n        <StripeProvider apiKey='pk_test_FSRfhLIrttg50RdN9s1xt4Xr00mUF63Xd8'>\n          <Elements>\n            <CreatorFinish active={props.active} handleFinishSubmit={props.handleFinishSubmit}/>\n          </Elements>\n        </StripeProvider>\n        :\n        null\n      }\n    </Segment>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps)(CreatorSegment)\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {NavLink} from 'react-router-dom';\n\nimport {Grid, Menu, Icon} from 'semantic-ui-react';\n\nimport CreatorMenu from '../component/creator/CreatorMenu';\nimport CreatorSegment from '../component/creator/CreatorSegment';\n\nclass CreatorDashboard extends Component {\n  state = {\n    active: '',\n    add: false,\n    finish: false\n  }\n\n  handleClick = (e, {value}) => {\n    this.setState({\n      active: value,\n      add: false,\n      finish: false\n    })\n  }\n\n  handleAddClick = () => {\n    this.setState({\n      add: !this.state.add,\n      finish: false\n    })\n  }\n\n  handleFinishClick = () => {\n    this.setState({\n      add: false,\n      finish: !this.state.finish\n    })\n  }\n\n  handleFinishSubmit = () => {\n    this.setState({\n      active: ''\n    })\n  }\n\n  render() {\n    const active = this.props.plan.find(plan => plan.id === this.state.active)\n\n    return (\n      <React.Fragment>\n        <h1 style={{'textAlign': 'center'}}>Creator Dashboard</h1>\n        <Grid>\n          <Grid.Column width={3}>\n            <Menu fluid vertical tabular>      \n              <Menu.Item as={NavLink} to='create-plan'><Icon name='add'/>Create Plan</Menu.Item>\n              <CreatorMenu active={active} handleClick={this.handleClick} handleAddClick={this.handleAddClick} handleFinishClick={this.handleFinishClick}/>\n            </Menu>\n          </Grid.Column>\n\n          <Grid.Column stretched width={12}>\n            {active ?\n              <CreatorSegment active={active} add={this.state.add} finish={this.state.finish} handleFinishSubmit={this.handleFinishSubmit}/>\n              :\n              null\n            }\n          </Grid.Column>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    plan: state.plan.all\n  }\n}\n\nexport default connect(mapStateToProps)(CreatorDashboard)\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Menu} from 'semantic-ui-react';\n\nconst EndMenu = props => {\n  const plans = props.plan.filter(plan => plan.creator_id === props.user.id && plan.end === true)\n\n  const menuItem = plans.map(plan => {\n    return (\n      <Menu.Item\n        key={plan.id}\n        value={plan.id}\n        active={props.active === plan.id}\n        onClick={props.handleClick}\n      >\n        {plan.name}\n      </Menu.Item>\n    )\n  })\n\n  return (\n    <React.Fragment>\n      {menuItem}\n    </React.Fragment>\n  )\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.current,\n    plan: state.plan.all\n  }\n}\n\nexport default connect(mapStateToProps)(EndMenu)\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Segment, Icon} from 'semantic-ui-react';\n\nconst EndSegment = props => {\n  const attendingEntries = props.active.entries.filter(entry => entry.attending === true)\n  const successfulEntries = attendingEntries.filter(entry => entry.payout)\n\n  const payout = successfulEntries[0] ? successfulEntries[0].payout : 0\n\n  const renderUsers = attendingEntries.map(entry => {\n    if(entry.payout) {\n      const user = props.user.all.find(user => entry.user_id === user.id)\n      return <li key={user.id}>{props.active.creator_id === user.id ? `${user.name} (Creator)` : user.name} <Icon name='check' color='green'/></li>\n    } else {\n      const user = props.user.all.find(user => entry.user_id === user.id)\n      return <li key={user.id}><strike className='flaker'>{props.active.creator_id === user.id ? `${user.name} (Creator)` : user.name}</strike></li>\n    }\n  })\n\n  return (\n    <Segment>\n      <h1>{props.active.name}</h1>\n      <h3>Attendees: {attendingEntries.filter(entry => entry.payout).length}</h3>\n      <h3>Payout: $ {payout}</h3>\n      <h3>Attendance List</h3>\n      <ul>{renderUsers}</ul>\n    </Segment>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps)(EndSegment)\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {Grid, Menu} from 'semantic-ui-react';\n\nimport EndMenu from '../component/end/EndMenu';\nimport EndSegment from '../component/end/EndSegment';\n\nclass EndDashboard extends Component {\n  state = {\n    active: '',\n  }\n\n  handleClick = (e, {value}) => {\n    this.setState({\n      active: value\n    })\n  }\n  render() {\n    const active = this.props.plan.find(plan => plan.id === this.state.active)\n\n    return (\n      <React.Fragment>\n        <h1 style={{'textAlign': 'center'}}>End Dashboard</h1>\n        <Grid>\n          <Grid.Column width={3}>\n            <Menu fluid vertical tabular>\n              <EndMenu active={this.state.active} handleClick={this.handleClick}/>\n            </Menu>\n          </Grid.Column>\n\n          <Grid.Column stretched width={12}>\n            {active ?\n              <EndSegment active={active}/>\n              :\n              null\n            }\n          </Grid.Column>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    plan: state.plan.all\n  }\n}\n\nexport default connect(mapStateToProps)(EndDashboard)\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\nimport LogIn from './LogIn';\nimport SignUp from './SignUp';\nimport NewPlan from './NewPlan';\nimport Dashboard from '../container/Dashboard';\nimport CreatorDashboard from '../container/CreatorDashboard';\nimport EndDashboard from '../container/EndDashboard';\n\nimport {StripeProvider, Elements} from 'react-stripe-elements';\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route path='/login' component={LogIn} />\n      <Route path='/signup' component={SignUp} />\n      <Route path='/creator-dashboard' component={CreatorDashboard} />\n      <Route path='/end-dashboard' component={EndDashboard} />\n      <Route path='/dashboard' component={Dashboard} />\n      <StripeProvider apiKey='pk_test_FSRfhLIrttg50RdN9s1xt4Xr00mUF63Xd8'>\n        <Elements>\n          <Route path='/create-plan' component={NewPlan} />\n        </Elements>\n      </StripeProvider>\n    </Switch>\n  )\n}\n\nexport default Router\n","import React from 'react';\nimport {Menu} from 'semantic-ui-react';\nimport {NavLink} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport {removeUserFromState} from '../action/UserAction';\n\nconst NavBar = props => {\n  const defaultNav = () => {\n    return (\n      <Menu pointing secondary>\n        <Menu.Item header><strike>Flaker</strike></Menu.Item>\n        <Menu.Item header as={NavLink} to='/signup' children='Sign Up' />\n        <Menu.Item header as={NavLink} to='/login' position='right' children='Login' />\n      </Menu>\n    )\n  }\n\n  const userNav = () => {\n    return (\n      <Menu pointing secondary>\n        <Menu.Item header><strike>{props.currentUser ? props.currentUser.name : 'Flaker'}</strike></Menu.Item>\n        <Menu.Item header as={NavLink} to='/creator-dashboard' children='Creator Dashboard' />\n        <Menu.Item header as={NavLink} to='/dashboard' children='Dashboard' />\n        <Menu.Item header as={NavLink} to='/end-dashboard' children='End Dashboard' />\n        <Menu.Item header as={NavLink} to='/create-plan' children='Create Plan' />\n        <Menu.Item header as={NavLink} to='/login' position='right' onClick={props.removeUserFromState}>Logout</Menu.Item>\n      </Menu>\n    )\n  }\n\n  return (\n    props.user.current.token ? userNav() : defaultNav()\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    currentUser: state.user.all.find(user => user.id === state.user.current.id)\n  }\n}\n\nexport default connect(mapStateToProps, {removeUserFromState})(NavBar)\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Switch, Route} from 'react-router-dom';\nimport Router from './component/Router';\n\nimport {getCurrentUser, getUsers} from './adapter/UserAdapter';\nimport {getPlans} from './adapter/PlanAdapter';\nimport {getStripe} from './adapter/StripeAdapter';\n\nimport NavBar from './component/NavBar';\nimport LogIn from './component/LogIn';\nimport SignUp from './component/SignUp';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        {this.props.user.token ?\n          <Router />\n          :\n          <Switch>\n            <Route path='/login' component={LogIn} />\n            <Route path='/signup' component={SignUp} />\n          </Switch>\n        }\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.props.getPlans()\n    this.props.getUsers()\n    if(localStorage.getItem('jwt')) {\n      this.props.getCurrentUser()\n        .then(() => this.props.getStripe(this.props.user.stripeId))\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.current\n  }\n}\n\nexport default connect(mapStateToProps, {getCurrentUser, getUsers, getPlans, getStripe})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  all: [],\n  current: {\n    id: 0,\n    stripeId: '',\n    balance: 0,\n    token: '',\n    entries: [],\n    plans: []\n  }\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'SAVE_USER_TO_STATE':\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          id: action.payload.user.id,\n          stripeId: action.payload.user.stripe_id,\n          entries: action.payload.entries,\n          plans: action.payload.plans\n        }\n      };\n\n    case 'SAVE_TOKEN_TO_STATE':\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          token: action.payload\n        }\n      };\n\n    case 'SET_USER_TO_STATE':\n      return {\n        ...state,\n        current: {\n          id: action.payload.user.id,\n          stripeId: action.payload.user.stripe_id,\n          entries: action.payload.entries,\n          plans: action.payload.plans,\n          token: localStorage.getItem('jwt')\n        }\n      };\n\n    case 'REMOVE_USER_FROM_STATE':\n      localStorage.clear()\n      return initialState\n\n    case 'SAVE_USERS_TO_STATE':\n      return {\n        ...state,\n        all: action.payload\n      }\n\n    case 'SAVE_ENTRY_TO_STATE':\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          entries: [...state.current.entries, action.payload]\n        }\n      }\n\n    case 'EDIT_ENTRY_IN_STATE':\n      const editedEntries = state.current.entries.map(entry => {\n        if(entry.id === action.payload.id) {\n          return {\n            ...entry,\n            ...action.payload\n          }\n        } else {\n          return entry\n        }\n      })\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          entries: editedEntries\n        }\n      }\n\n    case 'REMOVE_ENTRY_FROM_STATE':\n      const removedEntries = state.current.entries.filter(entry => entry.id !== action.payload.id)\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          entries: removedEntries\n        }\n      }\n\n    case 'SAVE_PLAN_TO_USER_STATE':\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          plans: [...state.current.plans, action.payload]\n        }\n      }\n\n    case 'SAVE_STRIPE_BALANCE_TO_STATE':\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          balance: action.payload\n        }\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default userReducer\n","const initialState = {\n  all: []\n}\n\nconst planReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'SAVE_PLAN_TO_STATE':\n      return {\n        all: [...state.all, action.payload]\n      }\n\n    case 'SAVE_PLANS_TO_STATE':\n      return {\n        all: action.payload\n      }\n\n    case 'SAVE_ENTRY_TO_PLAN_STATE':\n      const currentPlan = state.all.find(plan => plan.id === action.payload.plan_id)\n      const newEntries = [...currentPlan.entries, action.payload]\n      const savedEntry = state.all.map(plan => {\n        if(plan.id === action.payload.plan_id) {\n          return {\n            ...plan,\n            entries: newEntries\n          }\n        } else {\n          return plan\n        }\n      })\n      return {\n        all: savedEntry\n      }\n\n    case 'EDIT_PLAN_IN_STATE':\n      const editedPlans = state.all.map(plan => {\n        if(plan.id === action.payload.id) {\n          return action.payload\n        } else {\n          return plan\n        }\n      })\n      return {\n        all: editedPlans\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default planReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nimport userReducer from './reducer/UserReducer';\nimport planReducer from './reducer/PlanReducer';\n\nlet rootReducer = combineReducers({user: userReducer, plan: planReducer});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}